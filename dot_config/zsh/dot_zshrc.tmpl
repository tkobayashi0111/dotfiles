### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
### End of Zinit's installer chunk

# ---------------------------------------------------------------------------- #
#                                      env                                     #
# ---------------------------------------------------------------------------- #
export LANG=ja_JP.UTF-8
# 曖昧幅の文字を半角で表示していることを明示
export RUNEWIDTH_EASTASIAN=0

# homebrew
# oh-my-poshのためにここで読み込む
if [[ -z $TMUX ]]; then
    if [ -e /usr/local/bin/brew ]; then
        eval "$(/usr/local/bin/brew shellenv)"
    elif [ -e /opt/homebrew/bin/brew ]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    elif [ -e /home/linuxbrew/.linuxbrew/bin/brew ]; then
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    elif [ -e ~/homebrew/bin/brew ]; then
        eval "$(~/homebrew/bin/brew shellenv)"
        # caskでユーザー配下のApplicationsにインストールする
        export HOMEBREW_CASK_OPTS="--appdir=~/Applications"
    fi
fi

# snap
{{- if .wsl }}
export PATH=$PATH:/snap/bin
{{- end }}

# ---------------------------------------------------------------------------- #
#                           zinit plugin without lazy                          #
# ---------------------------------------------------------------------------- #
zinit light zsh-users/zsh-autosuggestions

# ---------------------------------------------------------------------------- #
#                                  zsh config                                  #
# ---------------------------------------------------------------------------- #
# コマンド補完
autoload -Uz compinit && compinit

# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# Ctrl+Dでzshを終了しない
setopt ignore_eof

# '#' 以降をコメントとして扱う
setopt interactive_comments

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 補完時にヒストリを自動的に展開
setopt hist_expand

# auto-suggestionsの色変更
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=246'

# viinsキーマップ
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode
# emacsのキーマップを一部使えるように
bindkey -M viins '^A' beginning-of-line
bindkey -M viins '^E' end-of-line
bindkey -M viins '^K' kill-line
bindkey -M viins '^U' backward-kill-line
bindkey -M viins '^W' backward-kill-word
bindkey -M viins '^Y' yank

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# ---------------------------------------------------------------------------- #
#                                    prompt                                    #
# ---------------------------------------------------------------------------- #
if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
  eval "$(oh-my-posh init zsh --config ~/.ohmyposh.mytheme.json)"
fi

# ---------------------------------------------------------------------------- #
#                                    asdf                                      #
# ---------------------------------------------------------------------------- #
if command -v brew &> /dev/null; then
  eval ". $(brew --prefix asdf)/libexec/asdf.sh"
fi

# ---------------------------------- 遅延読み込み ---------------------------------- #
# intellij, vscodeでの読み込みは遅延しない
if [ -z "$INTELLIJ_ENVIRONMENT_READER" ] && [ -z "VSCODE_CLI" ]; then
  zinit wait lucid null for \
      atinit'source "$ZDOTDIR/.zshrc.lazy"' \
      @'zdharma-continuum/null'
else
  source $ZDOTDIR/.zshrc.lazy
fi
